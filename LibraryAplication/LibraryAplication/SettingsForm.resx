<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CGcvd48AAAAASUVORK5CYII=
</value>
  </data>
</root>