<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJYAAACYCAIAAACJaYfFAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABLhJREFUeF7tnFF6qyAQRruQ7CKLyB7cg2vo1i8IxhkETb9eK0f/8xYZ0HAcBEP7
        9S3gSCEeKcQjhXikEI8U4pFCPFKIRwrxSCEeKcQjhXikEI8U4pFCPFKIRwrxSCEeKcQjhXikEI8U4pFC
        PFKIRwrxSCEeKcQjhXikEI8U4pFCPFKIRwrxSCEeKcQjhXikEI8U4pFCPFKIRwrxSCEeKcQjhXikEI8U
        4pFCPFKIRwrxSCEeKcQjhXj6Uzi+Hl8FzyGXeSqRrdAr02cWjsPr6fQ8XmMuKhiHIUc+XsPYCLo23Q6k
        ZYo1JebIG6ZfBqMwsDmeSmF31B509VSUwk6ZxZQq16qksFMWMXsSpbBTnJjhOcmb8ePptsJpcvswN0H4
        8AyT11x8ARgK548LxlhT4fhemcQFRzo0L0HCsTBIT8foUBQGWqlYV2ic+yJ7M7RXKiBACn3vR1LpXuSG
        3HUhEJTCusRKpE3YdaZdzCFMYWA1ng6rSOdoRyHfIU9hqSBjI51lKTyLDYWBIhUDNtI52lHIn9FAFZap
        VEQ6w6s2XNX2GShgFZYSfeTmfMYU8nMQrTBgZJSRTU/G/BUEdqpwXH7yje/Ctvr5LWQt27yJCaWpkdBw
        PnaZlzMdKvTjY2IzGVO+NUKu/4q034FUfIoU4pFCPFKIRwrxSCEeKcQjhXikEI8U4pFCPFKIRwrxSCEe
        KcQjhXiOUFj70TZxjZ0OnXFQFpqtE4npp3L5O4IDB1K7i2x764T4DVKIRwrxSCEeKcRzlsIxzFmHMGt9
        PuMmz2mxkbZ85vivh9mr60vS7DYXeULgtG3UzYVjQ625cG2b6SNclOG1uvKhrHLuxtQzFLqChO/1N/GP
        B93aZGGd1pVmFyp7t5fla16uBp/LuSYxpft3lfn+Mkvg09a8J2VhuJXt+j9019xZviD2jElG2+JulxUt
        FVdg2jIl9aOJpcye2l7T+rb6C857Ftp3OF6He7vjK9o2P7ntTbwPbxS0L6rV0sbF/hE9KnQ1fcWNSlVa
        LbXa+eT4L++q/861FI5xelLOZ2Z+qtDGu++ywfprHs9lFC7/J8i+jzUtleFVVybenthG126dU7mIwpaq
        pkLX1DxlWg4VwU5h5bucyiUUuh52FTYUBuLfkD7sijNE1Rd5PTu8scJYVvFaxzv8uNpfcI2B1J0qVJkL
        ds8R1qP58y5eYmhveuK66s2XQIdykMIxTg3dV47Pm+UbxnJbbEcv+zfysaeWemOYs+TDEdOkX/W/8S/C
        jK7Sx5raiGqmTHVOyc4jFG70z5RT9e5OhQ0VoWtarc5pGu4K81gLBpJf2+3BaE67fYWJipO8bskBE6HZ
        6hP0bzhwIO0bn+tNTsmrn3FfhVMerh/RkZjQyWAroiduqjAp2kqxLFFZ2Cfzk3DDTw4BGLynwvcw2Rol
        k8AwI8qfu+aeA+kylymWDuEpOM1gpwltPtY7t53OZFvl6iAt2HMIg/sqvAxSiEcK8UghHinEI4V4pBCP
        FOKRQjxSiEcK8UghHinEI4V4pBCPFOKRQjxSiEcK8UghHinEI4V4pBCPFOKRQjxSiEcK8UghHinEI4V4
        pBCPFOKRQjxSiEcK8UghHimE8/39D2AhkhuO/UpoAAAAAElFTkSuQmCC
</value>
  </data>
</root>